# -*- coding: utf-8 -*-
"""Online shopping Retail.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18WLYwPffxRF-686xrmtMBJJ0Df1eeeMk
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df= pd.read_csv('/content/online_shoppers_intention.csv')

df.head()

df.info()

df.describe()

df.isnull().sum()

df.duplicated().sum()

df[df.duplicated()]

df.shape

sns.heatmap(df.corr())

df.columns

sns.countplot(x='Revenue',data=df)

fal_count=df.groupby('Revenue')['Administrative'].count()[0]
tru_count=df.groupby('Revenue')['Administrative'].count()[1]
per=(tru_count/fal_count)*100
per

#18.3% deals happen successfully

sns.pairplot(df.loc[:,['Administrative_Duration','Informational_Duration','ProductRelated_Duration','Revenue']],
             hue='Revenue',kind='reg')

sns.pairplot(df.loc[:,['Administrative','Informational','ProductRelated']],kind='reg')

# No realtion as for the type of page visited by the user.

plt.figure(figsize=(15,5))
sns.countplot(x='Administrative',data=df)
plt.xlabel('Administrative Page Count')
plt.show()

# People hardly visit the administrative page

plt.figure(figsize=(20,5))
sns.scatterplot(x='Administrative',y='Administrative_Duration',hue='Revenue',data=df)
plt.xlabel('Administrative Page Count')
plt.show()

plt.figure(figsize=(20,5))
sns.boxplot(x='Administrative',y='Administrative_Duration',hue='Revenue',data=df)
plt.ylim(0,2000)
plt.show()

#Pointers:
#1. If people visit the page less than 7 times, people dont spend much time.
#2. if visited more than 19 ties, there is no revenue.
#3. if visited between 8-18, there is a possibility of some deal or collaboration.

plt.figure(figsize=(15,5))
sns.countplot(x='Informational',data=df)
plt.xlabel('Informational Page Count')
plt.show()

#popel dont visit the information page much.

plt.figure(figsize=(20,5))
sns.scatterplot(x='Informational',y='Informational_Duration',data=df)
plt.xlabel('Informational Page Count')
plt.show()

plt.figure(figsize=(20,5))
sns.boxplot(x='Informational',y='Informational_Duration',hue='Revenue',data=df)
plt.ylim(0,2000)
plt.show()

# people spend more time on information to make a deal.

plt.figure(figsize=(20,7))
sns.scatterplot(x='ProductRelated',y='ProductRelated_Duration',data=df)
plt.xlabel('ProductRelated Page Count')
plt.show()

plt.figure(figsize=(20,15))
sns.boxplot(y='ProductRelated',data=df)
plt.show()

sns.barplot(y='PageValues',x='Revenue', data=df)
plt.show()

#there is a direct realtion between page values and revenue, i.e. mpre page visits means more chances of having revenue.

adm=np.mean((df['Administrative']/df['Administrative_Duration']).replace(np.inf,np.nan).dropna())
inm=np.mean((df['Informational']/df['Informational_Duration']).replace(np.inf,np.nan).dropna())
prm=np.mean((df['ProductRelated']/df['ProductRelated_Duration']).replace(np.inf,np.nan).dropna())
pagm=pd.Series([adm,inm,prm],index=['Administrative','Informational','ProductRelated'])
plt.plot(pagm.index,pagm.values,'-^g')
plt.xlabel('Type of Page')
plt.ylabel('Mean Time Spent')

#the time spent on product related is less as compared to others.
#Product related page should be crisp and administrative should be more descriptive

df.nunique()

os=df.groupby('Revenue')['OperatingSystems'].value_counts()
os

osr=pd.DataFrame(os[True])
plt.figure(figsize=(15,4))
sns.barplot(x=osr.index,y='OperatingSystems',data=osr)
plt.ylabel('Count of OperatingSystem where Revenue Is Earned')
plt.show()

#when os2 is used, the most revenue is earned.

br=df.groupby('Revenue')['Browser'].value_counts()
br

brt=pd.DataFrame(br[True])
plt.figure(figsize=(15,4))
sns.barplot(x=brt.index,y='Browser',data=brt)
plt.ylabel('Count of Browser where Revenue Is Earned')

# browser 2 is the one to give the max revenue. so its apt to get the attention of the people.

rr=df.groupby('Revenue')['Region'].value_counts()
rr

rrf=pd.DataFrame(rr[False])
rrt=pd.DataFrame(rr[True])
plt.figure(figsize=(15,4))
sns.barplot(x=rrt.index,y='Region',data=rrt)
plt.ylabel('Count of Region where Revenue Is Earned')

#Region 1 is the one providing max revenue and hence should be targeted more.
#while 3 is the one that could be the potential.

tf=df.groupby('Revenue')['TrafficType'].value_counts()
tf

tf1=pd.DataFrame(tf[True])
tf2=pd.DataFrame(tf[False])
plt.figure(figsize=(15,4))
sns.barplot(x=tf1.index,y='TrafficType',data=tf1)
plt.ylabel('Count of TrafficType where Revenue Is Earned')

tff=tf2[tf2>50]
tft=tf1[tf1>50]
tfp=tft/tff
plt.plot(tfp['TrafficType'].sort_values(ascending=True))
plt.xticks(range(11))
plt.show()

#redirect the traffic through type 8

